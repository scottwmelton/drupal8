<?php

/**
 * @file
 * Insert, Update and theme function.
 */

use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Database\Database;

/**
 * Implements hook_theme().
 */
function simple_revision_theme() {

  $theme['revision_data'] = [
    'variables' => ['revisiondata' => NULL],
    'template' => 'revision-all',
  ];

  $theme['revert_form'] = [
    'variables' => ['revertform' => NULL],
    'template' => 'revert-form',
  ];

  return $theme;
}

/**
 * Implements hook_ENTITY_TYPE_update().
 */
function simple_revision_taxonomy_term_update(EntityInterface $entity) {

  $term = $entity;

  // entity_id.
  $entity_id = $term->id();

  // changed.
  $changed = $term->getChangedTime();

  // langcode.
  $langcode = $term->get('langcode')->value;

  // fields.
  $fields = $term->getFields();

  // Serialized data.
  $serialized_data = serialize($term->getFields());

  // Database Connection Object.
  $connection = Database::getConnection();

  // Database Schema.
  $schema = $connection->schema();

  if ($schema->tableExists('simple_revision')) {

    $results = $connection->select('simple_revision', 'tt')->fields('tt', ['changed'])->execute()->fetchAll();

    foreach ($results as $result) {
      $changedfromdb[] = $result->changed;
    }

    if (!in_array($changed, $changedfromdb)) {
      $values = array($entity_id, $serialized_data, $changed, $langcode);

      $resultafterinsert = $connection->insert('simple_revision')
        ->fields(['entity_id', 'revision_data', 'changed', 'langcode'], $values)
        ->execute();
    }
  }
}

/**
 * Implements hook_ENTITY_TYPE_insert().
 */
function simple_revision_taxonomy_term_insert(EntityInterface $entity) {

  $term = $entity;

  // entity_id.
  $entity_id = $term->id();

  // changed.
  $changed = $term->getChangedTime();

  // langcode.
  $langcode = $term->get('langcode')->value;

  // fields.
  $fields = $term->getFields();

  // Serialized data.
  $serialized_data = serialize($term->getFields());

  // Database Connection Object.
  $connection = Database::getConnection();

  // Database Schema.
  $schema = $connection->schema();

  if ($schema->tableExists('simple_revision')) {

    $results = $connection->select('simple_revision', 'tt')
      ->fields('tt', ['changed'])
      ->execute()
      ->fetchAll();

    foreach ($results as $result) {
      $changedfromdb[] = $result->changed;
    }

    if (!in_array($changed, $changedfromdb)) {
      $values = array($entity_id, $serialized_data, $changed, $langcode);

      $resultafterinsert = $connection->insert('simple_revision')
        ->fields(['entity_id', 'revision_data', 'changed', 'langcode'], $values)
        ->execute();
    }
  }
}
